{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["export default \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-Mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" ngModel matInput placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Login</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","export default \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput name=\\\"email\\\" ngModel type=\\\"email\\\" placeholder=\\\"E-Mail\\\" #emailInput=\\\"ngModel\\\" required email>\\r\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" ngModel matInput placeholder=\\\"Password\\\" #passwordInput=\\\"ngModel\\\" required>\\r\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">Signup</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","export default \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","export default \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"]\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}